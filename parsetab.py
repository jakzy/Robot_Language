
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND ASSIGNMENT BLOCK CARET COMMA CONVERSION DATA DECIMAL DOT EQ FALSE FROM GREATER LESS LOGIC L_FBRACKET L_QBRACKET MINUS MOVEDOWN MOVELEFT MOVERIGHT MOVEUP NEWLINE NOTEQ NUMERIC PINGDOWN PINGLEFT PINGRIGHT PINGUP PLUS PROC RECORD R_FBRACKET R_QBRACKET SLASH STAR STRING TEXT TO TRUE UNBLOCK UNDEF VARIABLE VISION VOICEprogram : statementsstatements : statements statement\n                      | statementstatement : declaration NEWLINE\n                     | assignment NEWLINE\n                     | cycle NEWLINE\n                     | command NEWLINE\n                     | procedure NEWLINE\n                     | call NEWLINE\n                     | record NEWLINE\n                     | empty NEWLINEdeclaration : type variableassignment : variable ASSIGNMENT expression cycle : L_FBRACKET expression R_FBRACKET BLOCK inner_statements UNBLOCKcommand : MOVEUP      L_QBRACKET variable R_QBRACKET\n                   | MOVEDOWN    L_QBRACKET variable R_QBRACKET\n                   | MOVERIGHT   L_QBRACKET variable R_QBRACKET\n                   | MOVELEFT    L_QBRACKET variable R_QBRACKET\n                   | PINGUP      L_QBRACKET variable R_QBRACKET\n                   | PINGDOWN    L_QBRACKET variable R_QBRACKET\n                   | PINGRIGHT   L_QBRACKET variable R_QBRACKET\n                   | PINGLEFT    L_QBRACKET variable R_QBRACKET\n                   | VISION      L_QBRACKET variable R_QBRACKET\n                   | VOICE       L_QBRACKET variable R_QBRACKETprocedure : PROC VARIABLE L_QBRACKET parameters R_QBRACKET statements_groupcall : VARIABLE L_QBRACKET variables R_QBRACKETrecord : RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET\n                  | RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET conversionsconversions :  conversions conversion\n                       | conversionconversion : CONVERSION TO   type VARIABLE\n                      | CONVERSION FROM type VARIABLEempty : type : NUMERIC\n                | STRING\n                | LOGIC\n                | VARIABLEexpression : variable\n                      | const\n                      | text\n                      | complex_expression\n                      | calltext : TEXTvariables : variables COMMA variable\n                    | variablevariable : VARIABLE L_QBRACKET expression R_QBRACKET\n                    | VARIABLEconst : TRUE\n                 | FALSE\n                 | UNDEF\n                 | DECIMAL\n                 complex_expression : expression sign expression\n                           | MINUS expressionsign : r_sign\n                 | l_sign\n                 | u_signr_sign : u_sign DOT l_sign : DOT u_sign  u_sign : PLUS\n                    | MINUS\n                    | STAR\n                    | SLASH\n                    | CARET\n                    | GREATER\n                    | LESS\n                    | EQ\n                    | NOTEQparameters : parameter COMMA parameters\n                      | parameterparameter : type VARIABLE AMPERSAND\n                     | type VARIABLEstatements_group : BLOCK inner_statements UNBLOCK\n                            | inner_statementinner_statements :  inner_statement inner_statements\n                            | inner_statementinner_statement : declaration NEWLINE\n                     | assignment NEWLINE\n                     | cycle NEWLINE\n                     | command NEWLINE\n                     | call NEWLINE\n                     | empty NEWLINEstatement : errors NEWLINEstatement : errorserrors : errors error\n        | error'
    
_lr_action_items = {'L_FBRACKET':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[15,15,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,15,15,15,-76,-77,-78,-79,-80,-81,15,]),'MOVEUP':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[16,16,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,16,16,16,-76,-77,-78,-79,-80,-81,16,]),'MOVEDOWN':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[17,17,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,17,17,17,-76,-77,-78,-79,-80,-81,17,]),'MOVERIGHT':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[18,18,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,18,18,18,-76,-77,-78,-79,-80,-81,18,]),'MOVELEFT':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[19,19,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,19,19,19,-76,-77,-78,-79,-80,-81,19,]),'PINGUP':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[20,20,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,20,20,20,-76,-77,-78,-79,-80,-81,20,]),'PINGDOWN':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[21,21,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,21,21,21,-76,-77,-78,-79,-80,-81,21,]),'PINGRIGHT':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[22,22,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,22,22,22,-76,-77,-78,-79,-80,-81,22,]),'PINGLEFT':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[23,23,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,23,23,23,-76,-77,-78,-79,-80,-81,23,]),'VISION':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[24,24,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,24,24,24,-76,-77,-78,-79,-80,-81,24,]),'VOICE':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,107,131,138,145,146,147,148,149,150,152,],[25,25,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,25,25,25,-76,-77,-78,-79,-80,-81,25,]),'PROC':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,],[26,26,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,]),'VARIABLE':([0,2,3,12,13,15,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,59,60,61,62,63,64,65,66,67,68,69,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,102,107,109,110,122,125,127,129,131,138,139,145,146,147,148,149,150,152,163,164,165,166,],[27,27,-3,-83,45,53,70,-37,72,-85,-34,-35,-36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,53,53,45,45,45,45,45,45,45,45,45,45,53,53,53,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,53,122,27,-57,-58,-37,140,45,122,27,27,122,-76,-77,-78,-79,-80,-81,27,122,122,167,168,]),'RECORD':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,],[28,28,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,29,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,74,91,107,108,112,113,114,115,116,117,118,119,120,121,126,128,131,132,133,134,135,136,137,138,143,145,146,147,148,149,150,151,152,153,156,158,159,161,162,167,168,],[-33,-33,-3,34,35,36,37,38,39,40,41,42,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,-12,-47,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,-13,-53,-33,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-46,-33,145,146,147,148,149,150,-33,-14,-76,-77,-78,-79,-80,-81,-25,-33,-73,-27,-28,-30,-72,-29,-31,-32,]),'error':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,],[29,29,-3,43,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,]),'NUMERIC':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,102,107,129,131,138,139,145,146,147,148,149,150,152,163,164,],[30,30,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,30,30,30,30,30,30,-76,-77,-78,-79,-80,-81,30,30,30,]),'STRING':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,102,107,129,131,138,139,145,146,147,148,149,150,152,163,164,],[31,31,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,31,31,31,31,31,31,-76,-77,-78,-79,-80,-81,31,31,31,]),'LOGIC':([0,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,102,107,129,131,138,139,145,146,147,148,149,150,152,163,164,],[32,32,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,32,32,32,32,32,32,-76,-77,-78,-79,-80,-81,32,32,32,]),'$end':([1,2,3,12,29,33,34,35,36,37,38,39,40,41,42,43,],[0,-1,-3,-83,-85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-82,-84,]),'ASSIGNMENT':([14,27,128,],[46,-47,-46,]),'TRUE':([15,46,59,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,109,110,],[54,54,54,54,54,54,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,54,-57,-58,]),'FALSE':([15,46,59,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,109,110,],[55,55,55,55,55,55,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,55,-57,-58,]),'UNDEF':([15,46,59,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,109,110,],[56,56,56,56,56,56,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,56,-57,-58,]),'DECIMAL':([15,46,59,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,109,110,],[57,57,57,57,57,57,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,57,-57,-58,]),'TEXT':([15,46,59,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,109,110,],[58,58,58,58,58,58,-54,-55,-56,-59,-60,-61,-62,-63,-64,-65,-66,-67,58,-57,-58,]),'MINUS':([15,46,47,48,49,50,51,52,53,54,55,56,57,58,59,71,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,104,105,108,109,110,111,126,128,],[59,59,82,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,59,59,59,82,59,-54,-55,-56,82,-59,-60,-61,-62,-63,-64,-65,-66,-67,59,82,82,-38,82,-57,-58,-38,-26,-46,]),'L_QBRACKET':([16,17,18,19,20,21,22,23,24,25,27,45,53,70,106,],[60,61,62,63,64,65,66,67,68,69,71,73,90,102,129,]),'R_QBRACKET':([45,48,49,50,51,52,53,54,55,56,57,58,91,92,93,94,95,96,97,98,99,100,101,103,104,105,108,111,123,124,126,128,140,141,142,154,155,],[-47,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,-53,112,113,114,115,116,117,118,119,120,121,126,128,-38,-52,-38,138,-69,-26,-46,-71,-44,156,-68,-70,]),'COMMA':([45,53,103,105,111,124,128,140,141,155,],[-47,-47,127,-45,-45,139,-46,-71,-44,-70,]),'R_FBRACKET':([47,48,49,50,51,52,53,54,55,56,57,58,91,108,126,128,],[75,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,-53,-52,-26,-46,]),'DOT':([47,48,49,50,51,52,53,54,55,56,57,58,74,79,81,82,83,84,85,86,87,88,89,91,104,105,108,111,126,128,],[80,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,80,109,-59,-60,-61,-62,-63,-64,-65,-66,-67,80,80,-38,80,-38,-26,-46,]),'PLUS':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[81,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,81,81,81,81,-38,81,-38,-26,-46,]),'STAR':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[83,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,83,83,83,83,-38,83,-38,-26,-46,]),'SLASH':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[84,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,84,84,84,84,-38,84,-38,-26,-46,]),'CARET':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[85,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,85,85,85,85,-38,85,-38,-26,-46,]),'GREATER':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[86,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,86,86,86,86,-38,86,-38,-26,-46,]),'LESS':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[87,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,87,87,87,87,-38,87,-38,-26,-46,]),'EQ':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[88,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,88,88,88,88,-38,88,-38,-26,-46,]),'NOTEQ':([47,48,49,50,51,52,53,54,55,56,57,58,74,80,91,104,105,108,111,126,128,],[89,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-43,89,89,89,89,-38,89,-38,-26,-46,]),'DATA':([72,],[106,]),'BLOCK':([75,138,],[107,152,]),'UNBLOCK':([130,131,144,145,146,147,148,149,150,157,],[143,-75,-74,-76,-77,-78,-79,-80,-81,161,]),'AMPERSAND':([140,],[155,]),'CONVERSION':([156,158,159,162,167,168,],[160,160,-30,-29,-31,-32,]),'TO':([160,],[163,]),'FROM':([160,],[164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,],[3,33,]),'declaration':([0,2,107,131,138,152,],[4,4,132,132,132,132,]),'assignment':([0,2,107,131,138,152,],[5,5,133,133,133,133,]),'cycle':([0,2,107,131,138,152,],[6,6,134,134,134,134,]),'command':([0,2,107,131,138,152,],[7,7,135,135,135,135,]),'procedure':([0,2,],[8,8,]),'call':([0,2,15,46,59,71,73,76,90,107,131,138,152,],[9,9,52,52,52,52,52,52,52,136,136,136,136,]),'record':([0,2,],[10,10,]),'empty':([0,2,107,131,138,152,],[11,11,137,137,137,137,]),'errors':([0,2,],[12,12,]),'type':([0,2,102,107,129,131,138,139,152,163,164,],[13,13,125,13,125,13,13,125,13,165,166,]),'variable':([0,2,13,15,46,59,60,61,62,63,64,65,66,67,68,69,71,73,76,90,107,127,131,138,152,],[14,14,44,48,48,48,92,93,94,95,96,97,98,99,100,101,105,48,48,111,14,141,14,14,14,]),'expression':([15,46,59,71,73,76,90,],[47,74,91,104,104,108,104,]),'const':([15,46,59,71,73,76,90,],[49,49,49,49,49,49,49,]),'text':([15,46,59,71,73,76,90,],[50,50,50,50,50,50,50,]),'complex_expression':([15,46,59,71,73,76,90,],[51,51,51,51,51,51,51,]),'sign':([47,74,91,104,108,],[76,76,76,76,76,]),'r_sign':([47,74,91,104,108,],[77,77,77,77,77,]),'l_sign':([47,74,91,104,108,],[78,78,78,78,78,]),'u_sign':([47,74,80,91,104,108,],[79,79,110,79,79,79,]),'variables':([71,90,],[103,103,]),'parameters':([102,129,139,],[123,142,154,]),'parameter':([102,129,139,],[124,124,124,]),'inner_statements':([107,131,152,],[130,144,157,]),'inner_statement':([107,131,138,152,],[131,131,153,131,]),'statements_group':([138,],[151,]),'conversions':([156,],[158,]),'conversion':([156,158,],[159,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',29),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',34),
  ('statements -> statement','statements',1,'p_statements','parser.py',35),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',43),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',44),
  ('statement -> cycle NEWLINE','statement',2,'p_statement','parser.py',45),
  ('statement -> command NEWLINE','statement',2,'p_statement','parser.py',46),
  ('statement -> procedure NEWLINE','statement',2,'p_statement','parser.py',47),
  ('statement -> call NEWLINE','statement',2,'p_statement','parser.py',48),
  ('statement -> record NEWLINE','statement',2,'p_statement','parser.py',49),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',50),
  ('declaration -> type variable','declaration',2,'p_declaration','parser.py',55),
  ('assignment -> variable ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',60),
  ('cycle -> L_FBRACKET expression R_FBRACKET BLOCK inner_statements UNBLOCK','cycle',6,'p_cycle','parser.py',65),
  ('command -> MOVEUP L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',70),
  ('command -> MOVEDOWN L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',71),
  ('command -> MOVERIGHT L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',72),
  ('command -> MOVELEFT L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',73),
  ('command -> PINGUP L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',74),
  ('command -> PINGDOWN L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',75),
  ('command -> PINGRIGHT L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',76),
  ('command -> PINGLEFT L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',77),
  ('command -> VISION L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',78),
  ('command -> VOICE L_QBRACKET variable R_QBRACKET','command',4,'p_command','parser.py',79),
  ('procedure -> PROC VARIABLE L_QBRACKET parameters R_QBRACKET statements_group','procedure',6,'p_procedure','parser.py',84),
  ('call -> VARIABLE L_QBRACKET variables R_QBRACKET','call',4,'p_call','parser.py',89),
  ('record -> RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET','record',6,'p_record','parser.py',94),
  ('record -> RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET conversions','record',7,'p_record','parser.py',95),
  ('conversions -> conversions conversion','conversions',2,'p_conversions','parser.py',104),
  ('conversions -> conversion','conversions',1,'p_conversions','parser.py',105),
  ('conversion -> CONVERSION TO type VARIABLE','conversion',4,'p_conversion','parser.py',113),
  ('conversion -> CONVERSION FROM type VARIABLE','conversion',4,'p_conversion','parser.py',114),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',119),
  ('type -> NUMERIC','type',1,'p_type','parser.py',124),
  ('type -> STRING','type',1,'p_type','parser.py',125),
  ('type -> LOGIC','type',1,'p_type','parser.py',126),
  ('type -> VARIABLE','type',1,'p_type','parser.py',127),
  ('expression -> variable','expression',1,'p_expression','parser.py',132),
  ('expression -> const','expression',1,'p_expression','parser.py',133),
  ('expression -> text','expression',1,'p_expression','parser.py',134),
  ('expression -> complex_expression','expression',1,'p_expression','parser.py',135),
  ('expression -> call','expression',1,'p_expression','parser.py',136),
  ('text -> TEXT','text',1,'p_text','parser.py',141),
  ('variables -> variables COMMA variable','variables',3,'p_variables','parser.py',146),
  ('variables -> variable','variables',1,'p_variables','parser.py',147),
  ('variable -> VARIABLE L_QBRACKET expression R_QBRACKET','variable',4,'p_variable','parser.py',155),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',156),
  ('const -> TRUE','const',1,'p_const','parser.py',164),
  ('const -> FALSE','const',1,'p_const','parser.py',165),
  ('const -> UNDEF','const',1,'p_const','parser.py',166),
  ('const -> DECIMAL','const',1,'p_const','parser.py',167),
  ('complex_expression -> expression sign expression','complex_expression',3,'p_complex_expression','parser.py',173),
  ('complex_expression -> MINUS expression','complex_expression',2,'p_complex_expression','parser.py',174),
  ('sign -> r_sign','sign',1,'p_sign','parser.py',182),
  ('sign -> l_sign','sign',1,'p_sign','parser.py',183),
  ('sign -> u_sign','sign',1,'p_sign','parser.py',184),
  ('r_sign -> u_sign DOT','r_sign',2,'p_r_sign','parser.py',189),
  ('l_sign -> DOT u_sign','l_sign',2,'p_l_sign','parser.py',194),
  ('u_sign -> PLUS','u_sign',1,'p_u_sign','parser.py',199),
  ('u_sign -> MINUS','u_sign',1,'p_u_sign','parser.py',200),
  ('u_sign -> STAR','u_sign',1,'p_u_sign','parser.py',201),
  ('u_sign -> SLASH','u_sign',1,'p_u_sign','parser.py',202),
  ('u_sign -> CARET','u_sign',1,'p_u_sign','parser.py',203),
  ('u_sign -> GREATER','u_sign',1,'p_u_sign','parser.py',204),
  ('u_sign -> LESS','u_sign',1,'p_u_sign','parser.py',205),
  ('u_sign -> EQ','u_sign',1,'p_u_sign','parser.py',206),
  ('u_sign -> NOTEQ','u_sign',1,'p_u_sign','parser.py',207),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','parser.py',212),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',213),
  ('parameter -> type VARIABLE AMPERSAND','parameter',3,'p_parameter','parser.py',221),
  ('parameter -> type VARIABLE','parameter',2,'p_parameter','parser.py',222),
  ('statements_group -> BLOCK inner_statements UNBLOCK','statements_group',3,'p_statements_group','parser.py',230),
  ('statements_group -> inner_statement','statements_group',1,'p_statements_group','parser.py',231),
  ('inner_statements -> inner_statement inner_statements','inner_statements',2,'p_inner_statements','parser.py',239),
  ('inner_statements -> inner_statement','inner_statements',1,'p_inner_statements','parser.py',240),
  ('inner_statement -> declaration NEWLINE','inner_statement',2,'p_inner_statement','parser.py',248),
  ('inner_statement -> assignment NEWLINE','inner_statement',2,'p_inner_statement','parser.py',249),
  ('inner_statement -> cycle NEWLINE','inner_statement',2,'p_inner_statement','parser.py',250),
  ('inner_statement -> command NEWLINE','inner_statement',2,'p_inner_statement','parser.py',251),
  ('inner_statement -> call NEWLINE','inner_statement',2,'p_inner_statement','parser.py',252),
  ('inner_statement -> empty NEWLINE','inner_statement',2,'p_inner_statement','parser.py',253),
  ('statement -> errors NEWLINE','statement',2,'p_statement_error','parser.py',258),
  ('statement -> errors','statement',1,'p_statement_error_no_nl','parser.py',263),
  ('errors -> errors error','errors',2,'p_errors','parser.py',268),
  ('errors -> error','errors',1,'p_errors','parser.py',269),
]
