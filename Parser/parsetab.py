
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNMENTleftLESSGREATEREQNOTEQleftPLUSMINUSleftSTARSLASHrightCARETrightUMINUSAMPERSAND ASSIGNMENT BLOCK CARET COMMA CONVERSION DATA DECIMAL DOT EQ FALSE FROM GREATER LESS LOGIC L_FBRACKET L_QBRACKET L_RBRACKET MINUS MOVEDOWN MOVELEFT MOVERIGHT MOVEUP NEWLINE NOTEQ NUMERIC PINGDOWN PINGLEFT PINGRIGHT PINGUP PLUS PROC RECORD R_FBRACKET R_QBRACKET R_RBRACKET SLASH STAR STRING TEXT TO TRUE UNBLOCK UNDEF VARIABLE VISION VOICEprogram : statementsstatements : statements statement\n                      | statementstatement : call NEWLINE\n                     | declaration NEWLINE\n                     | assignment NEWLINE\n                     | cycle NEWLINE\n                     | command NEWLINE\n                     | procedure NEWLINE\n                     | record NEWLINE\n                     | empty NEWLINEdeclaration : type variablecall : VARIABLE L_RBRACKET variables R_RBRACKETassignment : variable ASSIGNMENT expression\n                      | variable ASSIGNMENT assignment cycle : L_FBRACKET expression R_FBRACKET BLOCK inner_statements UNBLOCKcommand : MOVEUP      L_RBRACKET variable R_RBRACKET\n                   | MOVEDOWN    L_RBRACKET variable R_RBRACKET\n                   | MOVERIGHT   L_RBRACKET variable R_RBRACKET\n                   | MOVELEFT    L_RBRACKET variable R_RBRACKET\n                   | PINGUP      L_RBRACKET variable R_RBRACKET\n                   | PINGDOWN    L_RBRACKET variable R_RBRACKET\n                   | PINGRIGHT   L_RBRACKET variable R_RBRACKET\n                   | PINGLEFT    L_RBRACKET variable R_RBRACKET\n                   | VISION      L_RBRACKET variable R_RBRACKET\n                   | VOICE       L_RBRACKET expression R_RBRACKETprocedure : PROC VARIABLE L_QBRACKET parameters R_QBRACKET statements_grouprecord : RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET\n                  | RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET conversionsconversions :  conversions conversion\n                       | conversionconversion : CONVERSION TO   type VARIABLE\n                      | CONVERSION FROM type VARIABLEempty : type : NUMERIC\n                | STRING\n                | LOGIC\n                | VARIABLEexpression : variable\n                      | const\n                      | complex_expressionvariables :  expression\n                     |  expression COMMA variables variable : VARIABLE indexing\n                    | VARIABLEindexing : L_QBRACKET DECIMAL R_QBRACKET indexing\n                    | L_QBRACKET DECIMAL R_QBRACKET\n                    | L_QBRACKET VARIABLE R_QBRACKET indexing\n                    | L_QBRACKET VARIABLE R_QBRACKETconst : TRUE\n                 | FALSE\n                 | UNDEF\n                 | DECIMAL\n                 | TEXT\n                 complex_expression : part_expression PLUS    part_expression   %prec PLUS\n                              | part_expression MINUS   part_expression   %prec MINUS\n                              | part_expression STAR    part_expression   %prec STAR\n                              | part_expression SLASH   part_expression   %prec SLASH\n                              | part_expression CARET   part_expression   %prec CARET\n                              | part_expression GREATER part_expression   %prec GREATER\n                              | part_expression LESS    part_expression   %prec LESS\n                              | part_expression EQ      part_expression   %prec EQ\n                              | part_expression NOTEQ   part_expression   %prec NOTEQ\n                              | MINUS expression %prec UMINUSpart_expression : DOT expressionpart_expression : expression DOTpart_expression : expressionparameters : parameter COMMA parameters\n                      | parameterparameter : declaration AMPERSAND\n                     | declarationstatements_group : BLOCK inner_statements UNBLOCK\n                            | inner_statementinner_statements :  inner_statement inner_statements\n                            | inner_statementinner_statement : declaration NEWLINE\n                           | assignment NEWLINE\n                           | cycle NEWLINE\n                           | command NEWLINE\n                           | call NEWLINE\n                           | empty NEWLINEstatement : errordeclaration : type errorassignment : variable ASSIGNMENT errorcommand : MOVEUP      L_RBRACKET error R_RBRACKET\n                   | MOVEDOWN    L_RBRACKET error R_RBRACKET\n                   | MOVERIGHT   L_RBRACKET error R_RBRACKET\n                   | MOVELEFT    L_RBRACKET error R_RBRACKET\n                   | PINGUP      L_RBRACKET error R_RBRACKET\n                   | PINGDOWN    L_RBRACKET error R_RBRACKET\n                   | PINGRIGHT   L_RBRACKET error R_RBRACKET\n                   | PINGLEFT    L_RBRACKET error R_RBRACKET\n                   | VISION      L_RBRACKET error R_RBRACKET\n                   | VOICE       L_RBRACKET error R_RBRACKET'
    
_lr_action_items = {'error':([0,2,3,12,13,14,29,30,31,32,33,34,35,36,37,38,39,40,47,60,61,62,63,64,65,66,67,68,69,150,],[12,12,-3,-82,-38,45,-35,-36,-37,-2,-4,-5,-6,-7,-8,-9,-10,-11,79,94,96,98,100,102,104,106,108,110,112,-38,]),'VARIABLE':([0,2,3,12,13,14,16,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,47,58,59,60,61,62,63,64,65,66,67,68,69,82,83,84,85,86,87,88,89,90,113,116,119,150,154,159,166,167,172,173,174,175,176,177,179,189,190,191,192,],[13,13,-3,-82,-38,46,46,70,71,-35,-36,-37,-2,-4,-5,-6,-7,-8,-9,-10,-11,46,75,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,150,46,13,-38,150,13,13,150,-76,-77,-78,-79,-80,-81,13,150,150,193,194,]),'L_FBRACKET':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[16,16,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,16,16,16,-76,-77,-78,-79,-80,-81,16,]),'MOVEUP':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[17,17,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,17,17,17,-76,-77,-78,-79,-80,-81,17,]),'MOVEDOWN':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[18,18,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,18,18,18,-76,-77,-78,-79,-80,-81,18,]),'MOVERIGHT':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[19,19,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,19,19,19,-76,-77,-78,-79,-80,-81,19,]),'MOVELEFT':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[20,20,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,-76,-77,-78,-79,-80,-81,20,]),'PINGUP':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[21,21,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,21,21,21,-76,-77,-78,-79,-80,-81,21,]),'PINGDOWN':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[22,22,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,22,22,22,-76,-77,-78,-79,-80,-81,22,]),'PINGRIGHT':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[23,23,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,23,23,23,-76,-77,-78,-79,-80,-81,23,]),'PINGLEFT':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[24,24,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,24,24,24,-76,-77,-78,-79,-80,-81,24,]),'VISION':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[25,25,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,25,25,25,-76,-77,-78,-79,-80,-81,25,]),'VOICE':([0,2,3,12,32,33,34,35,36,37,38,39,40,119,159,166,172,173,174,175,176,177,179,],[26,26,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,26,26,26,-76,-77,-78,-79,-80,-81,26,]),'PROC':([0,2,3,12,32,33,34,35,36,37,38,39,40,],[27,27,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'RECORD':([0,2,3,12,32,33,34,35,36,37,38,39,40,],[28,28,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,32,33,34,35,36,37,38,39,40,42,44,45,46,49,50,51,52,53,54,55,56,76,77,78,79,81,91,92,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,156,157,159,160,161,162,163,164,165,166,170,172,173,174,175,176,177,178,179,180,182,184,185,187,188,193,194,],[-34,-34,-3,33,34,35,36,37,38,39,40,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,-44,-12,-83,-45,-39,-40,-41,-50,-51,-52,-53,-54,-39,-14,-15,-84,-66,-64,-65,-13,-47,-49,-34,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-17,-85,-18,-86,-19,-87,-20,-88,-21,-89,-22,-90,-23,-91,-24,-92,-25,-93,-26,-94,-46,-48,-34,172,173,174,175,176,177,-34,-16,-76,-77,-78,-79,-80,-81,-27,-34,-73,-28,-29,-31,-72,-30,-32,-33,]),'NUMERIC':([0,2,3,12,32,33,34,35,36,37,38,39,40,113,119,154,159,166,167,172,173,174,175,176,177,179,189,190,],[29,29,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,29,29,29,29,29,29,-76,-77,-78,-79,-80,-81,29,29,29,]),'STRING':([0,2,3,12,32,33,34,35,36,37,38,39,40,113,119,154,159,166,167,172,173,174,175,176,177,179,189,190,],[30,30,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,30,30,30,30,30,30,-76,-77,-78,-79,-80,-81,30,30,30,]),'LOGIC':([0,2,3,12,32,33,34,35,36,37,38,39,40,113,119,154,159,166,167,172,173,174,175,176,177,179,189,190,],[31,31,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,31,31,31,31,31,31,-76,-77,-78,-79,-80,-81,31,31,31,]),'$end':([1,2,3,12,32,33,34,35,36,37,38,39,40,],[0,-1,-3,-82,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'L_RBRACKET':([13,17,18,19,20,21,22,23,24,25,26,],[41,60,61,62,63,64,65,66,67,68,69,]),'ASSIGNMENT':([13,15,42,46,76,117,118,156,157,],[-45,47,-44,-45,47,-47,-49,-46,-48,]),'L_QBRACKET':([13,46,70,114,117,118,],[43,43,113,154,43,43,]),'TRUE':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FALSE':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'UNDEF':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DECIMAL':([16,41,43,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[55,55,74,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TEXT':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'MINUS':([16,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,69,73,76,77,81,82,83,84,85,86,87,88,89,90,91,92,111,116,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[58,58,-44,-45,58,-67,-39,-40,-41,-50,-51,-52,-53,-54,83,58,58,58,-67,-39,-67,-66,58,58,58,58,58,58,58,58,58,-64,-65,-67,58,-47,-49,-55,-67,-56,-57,-58,-59,83,83,83,83,-46,-48,]),'DOT':([16,41,42,46,47,48,49,50,51,52,53,54,55,56,58,59,69,73,76,77,81,82,83,84,85,86,87,88,89,90,91,92,111,116,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[59,59,-44,-45,59,81,-39,-40,-41,-50,-51,-52,-53,-54,59,59,59,81,-39,81,-66,59,59,59,59,59,59,59,59,59,-64,81,81,59,-47,-49,-55,81,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'AMPERSAND':([42,44,45,46,117,118,153,156,157,],[-44,-12,-83,-45,-47,-49,168,-46,-48,]),'COMMA':([42,44,45,46,49,50,51,52,53,54,55,56,73,81,91,92,117,118,120,121,122,123,124,125,126,127,128,129,152,153,156,157,168,],[-44,-12,-83,-45,-39,-40,-41,-50,-51,-52,-53,-54,116,-66,-64,-65,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,167,-71,-46,-48,-70,]),'R_QBRACKET':([42,44,45,46,74,75,117,118,151,152,153,156,157,168,169,181,],[-44,-12,-83,-45,117,118,-47,-49,166,-69,-71,-46,-48,-70,182,-68,]),'R_FBRACKET':([42,46,48,49,50,51,52,53,54,55,56,81,91,92,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,80,-39,-40,-41,-50,-51,-52,-53,-54,-66,-64,-65,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'PLUS':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,82,-67,-39,-67,-66,-64,-65,-67,-47,-49,-55,-67,-56,-57,-58,-59,82,82,82,82,-46,-48,]),'STAR':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,84,-67,-39,-67,-66,-64,-65,-67,-47,-49,84,-67,84,-57,-58,-59,84,84,84,84,-46,-48,]),'SLASH':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,85,-67,-39,-67,-66,-64,-65,-67,-47,-49,85,-67,85,-57,-58,-59,85,85,85,85,-46,-48,]),'CARET':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,86,-67,-39,-67,-66,-64,-65,-67,-47,-49,86,-67,86,86,86,86,86,86,86,86,-46,-48,]),'GREATER':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,87,-67,-39,-67,-66,-64,-65,-67,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'LESS':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,88,-67,-39,-67,-66,-64,-65,-67,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'EQ':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,89,-67,-39,-67,-66,-64,-65,-67,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'NOTEQ':([42,46,48,49,50,51,52,53,54,55,56,57,73,76,77,81,91,92,111,117,118,120,121,122,123,124,125,126,127,128,129,156,157,],[-44,-45,-67,-39,-40,-41,-50,-51,-52,-53,-54,90,-67,-39,-67,-66,-64,-65,-67,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-46,-48,]),'R_RBRACKET':([42,46,49,50,51,52,53,54,55,56,72,73,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,118,120,121,122,123,124,125,126,127,128,129,155,156,157,],[-44,-45,-39,-40,-41,-50,-51,-52,-53,-54,115,-42,-66,-64,-65,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,-47,-49,-55,-67,-56,-57,-58,-59,-60,-61,-62,-63,-43,-46,-48,]),'DATA':([71,],[114,]),'BLOCK':([80,166,],[119,179,]),'UNBLOCK':([158,159,171,172,173,174,175,176,177,183,],[170,-75,-74,-76,-77,-78,-79,-80,-81,187,]),'CONVERSION':([182,184,185,188,193,194,],[186,186,-31,-30,-32,-33,]),'TO':([186,],[189,]),'FROM':([186,],[190,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,],[3,32,]),'call':([0,2,119,159,166,179,],[4,4,164,164,164,164,]),'declaration':([0,2,113,119,154,159,166,167,179,],[5,5,153,160,153,160,160,153,160,]),'assignment':([0,2,47,119,159,166,179,],[6,6,78,161,161,161,161,]),'cycle':([0,2,119,159,166,179,],[7,7,162,162,162,162,]),'command':([0,2,119,159,166,179,],[8,8,163,163,163,163,]),'procedure':([0,2,],[9,9,]),'record':([0,2,],[10,10,]),'empty':([0,2,119,159,166,179,],[11,11,165,165,165,165,]),'type':([0,2,113,119,154,159,166,167,179,189,190,],[14,14,14,14,14,14,14,14,14,191,192,]),'variable':([0,2,14,16,41,47,58,59,60,61,62,63,64,65,66,67,68,69,82,83,84,85,86,87,88,89,90,116,119,159,166,179,],[15,15,44,49,49,76,49,49,93,95,97,99,101,103,105,107,109,49,49,49,49,49,49,49,49,49,49,49,15,15,15,15,]),'indexing':([13,46,117,118,],[42,42,156,157,]),'expression':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[48,73,77,91,92,111,121,121,121,121,121,121,121,121,121,73,]),'const':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'complex_expression':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'part_expression':([16,41,47,58,59,69,82,83,84,85,86,87,88,89,90,116,],[57,57,57,57,57,57,120,122,123,124,125,126,127,128,129,57,]),'variables':([41,116,],[72,155,]),'parameters':([113,154,167,],[151,169,181,]),'parameter':([113,154,167,],[152,152,152,]),'inner_statements':([119,159,179,],[158,171,183,]),'inner_statement':([119,159,166,179,],[159,159,180,159,]),'statements_group':([166,],[178,]),'conversions':([182,],[184,]),'conversion':([182,184,],[185,188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',37),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',42),
  ('statements -> statement','statements',1,'p_statements','parser.py',43),
  ('statement -> call NEWLINE','statement',2,'p_statement','parser.py',51),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',52),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',53),
  ('statement -> cycle NEWLINE','statement',2,'p_statement','parser.py',54),
  ('statement -> command NEWLINE','statement',2,'p_statement','parser.py',55),
  ('statement -> procedure NEWLINE','statement',2,'p_statement','parser.py',56),
  ('statement -> record NEWLINE','statement',2,'p_statement','parser.py',57),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',58),
  ('declaration -> type variable','declaration',2,'p_declaration','parser.py',63),
  ('call -> VARIABLE L_RBRACKET variables R_RBRACKET','call',4,'p_call','parser.py',68),
  ('assignment -> variable ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',73),
  ('assignment -> variable ASSIGNMENT assignment','assignment',3,'p_assignment','parser.py',74),
  ('cycle -> L_FBRACKET expression R_FBRACKET BLOCK inner_statements UNBLOCK','cycle',6,'p_cycle','parser.py',79),
  ('command -> MOVEUP L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',84),
  ('command -> MOVEDOWN L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',85),
  ('command -> MOVERIGHT L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',86),
  ('command -> MOVELEFT L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',87),
  ('command -> PINGUP L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',88),
  ('command -> PINGDOWN L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',89),
  ('command -> PINGRIGHT L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',90),
  ('command -> PINGLEFT L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',91),
  ('command -> VISION L_RBRACKET variable R_RBRACKET','command',4,'p_command','parser.py',92),
  ('command -> VOICE L_RBRACKET expression R_RBRACKET','command',4,'p_command','parser.py',93),
  ('procedure -> PROC VARIABLE L_QBRACKET parameters R_QBRACKET statements_group','procedure',6,'p_procedure','parser.py',98),
  ('record -> RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET','record',6,'p_record','parser.py',103),
  ('record -> RECORD VARIABLE DATA L_QBRACKET parameters R_QBRACKET conversions','record',7,'p_record','parser.py',104),
  ('conversions -> conversions conversion','conversions',2,'p_conversions','parser.py',112),
  ('conversions -> conversion','conversions',1,'p_conversions','parser.py',113),
  ('conversion -> CONVERSION TO type VARIABLE','conversion',4,'p_conversion','parser.py',121),
  ('conversion -> CONVERSION FROM type VARIABLE','conversion',4,'p_conversion','parser.py',122),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',127),
  ('type -> NUMERIC','type',1,'p_type','parser.py',132),
  ('type -> STRING','type',1,'p_type','parser.py',133),
  ('type -> LOGIC','type',1,'p_type','parser.py',134),
  ('type -> VARIABLE','type',1,'p_type','parser.py',135),
  ('expression -> variable','expression',1,'p_expression','parser.py',140),
  ('expression -> const','expression',1,'p_expression','parser.py',141),
  ('expression -> complex_expression','expression',1,'p_expression','parser.py',142),
  ('variables -> expression','variables',1,'p_variables','parser.py',147),
  ('variables -> expression COMMA variables','variables',3,'p_variables','parser.py',148),
  ('variable -> VARIABLE indexing','variable',2,'p_variable','parser.py',156),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',157),
  ('indexing -> L_QBRACKET DECIMAL R_QBRACKET indexing','indexing',4,'p_indexing','parser.py',165),
  ('indexing -> L_QBRACKET DECIMAL R_QBRACKET','indexing',3,'p_indexing','parser.py',166),
  ('indexing -> L_QBRACKET VARIABLE R_QBRACKET indexing','indexing',4,'p_indexing','parser.py',167),
  ('indexing -> L_QBRACKET VARIABLE R_QBRACKET','indexing',3,'p_indexing','parser.py',168),
  ('const -> TRUE','const',1,'p_const','parser.py',176),
  ('const -> FALSE','const',1,'p_const','parser.py',177),
  ('const -> UNDEF','const',1,'p_const','parser.py',178),
  ('const -> DECIMAL','const',1,'p_const','parser.py',179),
  ('const -> TEXT','const',1,'p_const','parser.py',180),
  ('complex_expression -> part_expression PLUS part_expression','complex_expression',3,'p_complex_expression','parser.py',186),
  ('complex_expression -> part_expression MINUS part_expression','complex_expression',3,'p_complex_expression','parser.py',187),
  ('complex_expression -> part_expression STAR part_expression','complex_expression',3,'p_complex_expression','parser.py',188),
  ('complex_expression -> part_expression SLASH part_expression','complex_expression',3,'p_complex_expression','parser.py',189),
  ('complex_expression -> part_expression CARET part_expression','complex_expression',3,'p_complex_expression','parser.py',190),
  ('complex_expression -> part_expression GREATER part_expression','complex_expression',3,'p_complex_expression','parser.py',191),
  ('complex_expression -> part_expression LESS part_expression','complex_expression',3,'p_complex_expression','parser.py',192),
  ('complex_expression -> part_expression EQ part_expression','complex_expression',3,'p_complex_expression','parser.py',193),
  ('complex_expression -> part_expression NOTEQ part_expression','complex_expression',3,'p_complex_expression','parser.py',194),
  ('complex_expression -> MINUS expression','complex_expression',2,'p_complex_expression','parser.py',195),
  ('part_expression -> DOT expression','part_expression',2,'p_part_expression_right','parser.py',203),
  ('part_expression -> expression DOT','part_expression',2,'p_part_expression_left','parser.py',208),
  ('part_expression -> expression','part_expression',1,'p_part_expression','parser.py',213),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','parser.py',218),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',219),
  ('parameter -> declaration AMPERSAND','parameter',2,'p_parameter','parser.py',227),
  ('parameter -> declaration','parameter',1,'p_parameter','parser.py',228),
  ('statements_group -> BLOCK inner_statements UNBLOCK','statements_group',3,'p_statements_group','parser.py',236),
  ('statements_group -> inner_statement','statements_group',1,'p_statements_group','parser.py',237),
  ('inner_statements -> inner_statement inner_statements','inner_statements',2,'p_inner_statements','parser.py',245),
  ('inner_statements -> inner_statement','inner_statements',1,'p_inner_statements','parser.py',246),
  ('inner_statement -> declaration NEWLINE','inner_statement',2,'p_inner_statement','parser.py',254),
  ('inner_statement -> assignment NEWLINE','inner_statement',2,'p_inner_statement','parser.py',255),
  ('inner_statement -> cycle NEWLINE','inner_statement',2,'p_inner_statement','parser.py',256),
  ('inner_statement -> command NEWLINE','inner_statement',2,'p_inner_statement','parser.py',257),
  ('inner_statement -> call NEWLINE','inner_statement',2,'p_inner_statement','parser.py',258),
  ('inner_statement -> empty NEWLINE','inner_statement',2,'p_inner_statement','parser.py',259),
  ('statement -> error','statement',1,'p_statement_error_no_nl','parser.py',264),
  ('declaration -> type error','declaration',2,'p_declaration_error','parser.py',270),
  ('assignment -> variable ASSIGNMENT error','assignment',3,'p_assignment_err','parser.py',276),
  ('command -> MOVEUP L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',282),
  ('command -> MOVEDOWN L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',283),
  ('command -> MOVERIGHT L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',284),
  ('command -> MOVELEFT L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',285),
  ('command -> PINGUP L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',286),
  ('command -> PINGDOWN L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',287),
  ('command -> PINGRIGHT L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',288),
  ('command -> PINGLEFT L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',289),
  ('command -> VISION L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',290),
  ('command -> VOICE L_RBRACKET error R_RBRACKET','command',4,'p_command_err','parser.py',291),
]
